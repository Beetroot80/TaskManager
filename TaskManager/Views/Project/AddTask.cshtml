@model TaskManager.Models.ViewTasksModel

@{ Layout = "~/Views/Shared/_Layout.cshtml";}

<div class="col-md-offset-3">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal" id="add-task">
            <header class="text-center">Add task</header>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group add-task">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div>
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group add-task">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div>
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group add-task">
                @Html.LabelFor(model => model.DeadLine, htmlAttributes: new { @class = "control-label col-md-2 " })
                <div>
                    @Html.EditorFor(model => model.DeadLine, new { htmlAttributes = new { @class = "form-control datefield" } })
                    @Html.ValidationMessageFor(model => model.DeadLine, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group add-task">
                @Html.LabelFor(model => model.StatusTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                <div>
                    @Html.DropDownListFor(model => model.StatusTitle, new SelectList((ICollection<string>)TempData["StatusList"]), new { @class = "btn btn-default btn-block text-center" })
                    @Html.ValidationMessageFor(model => model.StatusTitle, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group add-task">
                @Html.LabelFor(model => model.PriorityTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                <div>
                    @Html.DropDownListFor(model => model.PriorityTitle, new SelectList((ICollection<string>)TempData["PriorityList"]), new { @class = "btn btn-default btn-block text-center" })
                    @Html.ValidationMessageFor(model => model.PriorityTitle, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group add-task">
                @Html.LabelFor(model => model.AssignedToEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div>
                    @Html.EditorFor(model => model.AssignedToEmail, new { htmlAttributes = new { @class = "form-control usersvalue" } })
                    @Html.ValidationMessageFor(model => model.AssignedToEmail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group add-task">
                @Html.LabelFor(model => model.ProjectTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                <div>
                    @Html.DropDownListFor(model => model.ProjectTitle, new SelectList((ICollection<string>)TempData["ProjectTitles"]), new { @class = "btn btn-default btn-block text-center" })
                    @Html.ValidationMessageFor(model => model.ProjectTitle, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div>
                    <input type="submit" value="Create" class="btn btn-default" id="add-task-btn" />
                </div>
            </div>
        </div>
    }

</div>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/jquryUi")
@Styles.Render("~/jqueryUi/css")
<script type="text/javascript">

    $("document").ready(function () {
        $(".datefield").datepicker();
    });

    $('.usersvalue').autocomplete({
        source: '@Url.Action("UserList")'
    });
</script>